- name: copying the mongodb repo
  ansible.builtin.copy:
    src: mongo.repo
    dest: /etc/yum.repos.d/mongodb.repo

- name: installing {{COMPONENT}}
  ansible.builtin.package:
    name: mongodb-org
    state: present

- name: starting {{COMPONENT}}
  systemd:
        name: mongod
        state: started
        enabled: yes

- name: Replace value from 127.0.0.1 to 0.0.0.0
  ansible.builtin.replace:
    path: /etc/mongod.conf
    regexp: '127.0.0.1'
    replace: '0.0.0.0'

- name: download and inject schema
  ansible.builtin.unarchive:
    src: "https://github.com/stans-robot-project/mongodb/archive/main.zip"
    dest: /tmp
    remote_src: yes

# - name: injecting mongodb schema
#   community.mongodb.mongodb_shell:
#     file: "/tmp/mongodb-main/{{item}}.js"
#     idempotent: yes
#   loop:  
#     - users
#     - catalogue

- name: Read users.js content
  ansible.builtin.set_fact:
    users_js_content: "{{ lookup('file', '/tmp/mongodb-main/users.js') }}"

- name: Insert document only if it doesn't exist
  community.mongodb.mongodb_collection:
    database: mydb
    collection: users
    operation: insert
    document: "{{ users_js_content }}"
    write_concern: majority
  register: insert_result
  ignore_errors: yes
  when: insert_result.rc != 11000  # 11000 indicates duplicate key error

- name: printing HAI from task1 of play1
  ansible.builtin.debug:
     msg: "{{insert_result}}"


- name: configuring service name
  ansible.builtin.shell: set-hostname "{{COMPONENT}}-{{ENV}}"
